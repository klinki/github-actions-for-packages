name: Deploy Assets

on:
  workflow_dispatch:
    inputs:
      server:
        description: 'Server to deploy to (staging|test|prod)'
        required: true
        default: 'staging'

jobs:
  build:
    runs-on: [self-hosted, windows, X64]
    env:
      GIT_TERMINAL_PROMPT: 0
# Ugly workarounds for env variables conditionals - see https://github.community/t/possible-to-use-conditional-in-the-env-section-of-a-job/135170
      WEB_KUDU_PATH: ${{ github.event.inputs.server == 'staging' &&  || secrets.WEB_TEST_KUDU_PATH }}
      WEB_KUDU_USERNAME: ${{ github.event.inputs.server == 'staging' && secrets.WEB_STAGING_KUDU_USERNAME || secrets.WEB_TEST_KUDU_USERNAME }}
      WEB_KUDU_PASSWORD: ${{ github.event.inputs.server == 'staging' && secrets.WEB_STAGING_KUDU_PASSWORD || secrets.WEB_TEST_KUDU_PASSWORD }}
      DEPLOYMENT_ENV: job_staging

    steps:
      - if: ${{ github.event.inputs.server == 'test' }}
        env:
          WEB_KUDU_PATH: ${{ secrets.WEB_TEST_KUDU_PATH }}
          WEB_KUDU_USERNAME: ${{ secrets.WEB_TEST_KUDU_USERNAME }}
          WEB_KUDU_PASSWORD: ${{ secrets.WEB_TEST_KUDU_PASSWORD }}
          DEPLOYMENT_ENV: step_test
        shell: powershell
        run: |
          echo "Running on test environment"

      - if: ${{ github.event.inputs.server == 'staging' }}
        env:
          WEB_KUDU_PATH: ${{ secrets.WEB_STAGING_KUDU_PATH }}
          WEB_KUDU_USERNAME: ${{ secrets.WEB_STAGING_KUDU_USERNAME  }}
          WEB_KUDU_PASSWORD: ${{ secrets.WEB_STAGING_KUDU_PASSWORD }}
          DEPLOYMENT_ENV: step_staging
        shell: powershell
        run: |
          echo "Running on staging environment"

      - if: ${{ github.event.inputs.server == 'prod' }}
        env:
          WEB_KUDU_PATH: ${{ secrets.WEB_PROD_KUDU_PATH }}
          WEB_KUDU_USERNAME: ${{ secrets.WEB_PROD_KUDU_USERNAME }}
          WEB_KUDU_PASSWORD: ${{ secrets.WEB_PROD_KUDU_PASSWORD }}
          DEPLOYMENT_ENV: step_prod
        shell: powershell
        run: |
          echo "Running on prod environment"

    - shell: powershell 
      run: |
        echo "${{ env.DEPLOYMENT_ENV }}"
